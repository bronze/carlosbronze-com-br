---
import { ViewTransitions } from 'astro:transitions'
import LoadingIndicator from 'astro-loading-indicator/component'
import Footer from '@components/footer.astro'
import Navbar from '@components/navbar/navbar.astro'
import BodyBg from '@components/bodybg.astro'
import type { Frontmatter } from '../config'
import SEO from '../components/seo.astro'
import CustomStyles from '~/components/customstyles.astro'
import '~/css/main.css'
import '~/css/fonts.css'
import '@fontsource-variable/nunito/index.css'
import SpeedInsights from '@vercel/speed-insights/astro'

export interface Props {
  frontmatter: Frontmatter
}
const preFont = '/fonts/Inter-roman-latin.var.woff2'
const { frontmatter } = Astro.props
const consoleDate = frontmatter.publishDate
  .toISOString()
  .slice(0, 19)
  .replace('T', ' ')
const isDev = import.meta.env.DEV
const analyticsShow = isDev ? 'isDev' : 'PlausibleAnalytics' // PlausibleAnalytics
// const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString()

// const resolvedImageWithDomain = new URL('/opengraph.jpg', Astro.site).toString()

// export interface Props {
//   title: string
// }
// const { title } = Astro.props

// const makeTitle = title
//   ? title + ' | ' + 'Astroship'
//   : 'Astroship - Starter Template for Astro with Tailwind CSS'
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#434c5e" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      try {
        if (
          localStorage.theme === 'dark' ||
          (!('theme' in localStorage) &&
            window.matchMedia('(prefers-color-scheme: dark)').matches) ||
          document.documentElement.getAttribute('data-theme') === 'dark'
        ) {
          document.documentElement.classList.add('dark')
          document.documentElement.setAttribute('data-theme', 'dark')
          localStorage.theme = 'dark'
        } else {
          document.documentElement.classList.remove('dark')
          document.documentElement.setAttribute('data-theme', 'light')
          localStorage.theme = 'light'
        }
      } catch (_) {}
    </script>
    <link
      rel="preload"
      href={preFont}
      as="font"
      type="font/woff2"
      crossorigin
    />
    <CustomStyles />
    <SEO frontmatter={frontmatter} />
    {
      /* JS comment syntax is also valid

    Can we ask you a favor üôè
    Please keep this backlink on your website if possible.
    or Purchase a commercial license from https://web3templates.com

    <link
      rel="preload"
      href={preFont}
      as="font"
      type="font/woff2"
      crossorigin
    />
    <!-- <link rel="preload" as="image" href={src} alt="Hero" /> -->
    <!--
      SEO from Astroship / stablo
      SEO LD from https://github.com/hellotham/hello-astro/
      <SEO
      title={makeTitle}
      description="Astroship is a starter website template for Astro built with TailwindCSS."
      canonical={canonicalURL}
      twitter={{
        creator: '@surjithctly',
        site: '@web3templates',
        card: 'summary_large_image',
      }}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: 'website',
          title: `Astroship - Starter Template for Astro`,
          image: resolvedImageWithDomain,
        },
        image: {
          alt: 'Astroship Homepage Screenshot',
        },
      }}
    /> -->
    */
    }
    <script x-bind={analyticsShow}></script>
    <script></script>
    <!-- <SpeedInsights /> -->
    <ViewTransitions />
    <LoadingIndicator
      color="bg-primary"
      animationDuration={150}
      height="6px"
      threshold={false}
    />
  </head>
  <body
    class="bg-background text-text"
    x-data="windowLayout"
    :class="{ 'keyboard-navigation' : keyboardNavigation }"
    @mouseup="keyboardNavigation = false"
    @keydown.tab="keyboardNavigation = true">
    <nav aria-label="Skip Links">
      <ul class="off-screen">
        <li>
          <h2 class="a11y_heading">Accessibility links</h2>
        </li>
        <li>
          <a href="#primary_nav" class="skip-link">
            Skip to Primary Navigation
          </a>
        </li>
        <li>
          <a href="#primary_content" class="skip-link">
            Skip to Primary Content
          </a>
        </li>
      </ul>
    </nav>
    <BodyBg />
    <header id="primary_nav">
      <Navbar />
    </header>
    <main class="transition-fade scroll-mt-24" id="primary_content">
      <slot />
    </main>
    <Footer transition:persist />
    <ninja-keys> </ninja-keys>
    <script>
      const ninja = document.querySelector('ninja-keys')

      function setTheme(theme) {
        localStorage.setItem('theme', theme)
        document.documentElement.setAttribute('data-theme', theme)
      }

      ninja.data = [
        {
          id: 'Projects',
          title: 'Open Projects',
          hotkey: 'ctrl+N',
          icon: 'apps',
          section: 'Projects',
          handler: () => {
            // it's auto register above hotkey with this handler
            alert('Your logic to handle')
          },
        },
        {
          id: 'Toggle Theme',
          title: 'Toggle Dark Mode',
          icon: 'brightness_4',
          hotkey: 'ctrl+D',
          handler: () => {
            Alpine.store('darkMode').toggle() // Chama o store do Alpine diretamente
            return { keepOpen: true }
          },
        },
        {
          id: 'Theme',
          title: 'Change theme...',
          icon: 'desktop_windows',
          children: ['Light Theme', 'Dark Theme', 'System Theme'],
          handler: () => {
            // open menu if closed. Because you can open directly that menu from it's hotkey
            ninja.open({ parent: 'Theme' })
            // if menu opened that prevent it from closing on select that action, no need if you don't have child actions
            return { keepOpen: true }
          },
        },
        {
          id: 'Light Theme',
          title: 'Change theme to Light',
          icon: 'light_mode',
          parent: 'Theme',
          handler: () => {
            // simple handler
            setTheme('light')
            return { keepOpen: true }
          },
        },
        {
          id: 'Dark Theme',
          title: 'Change theme to Dark',
          icon: 'dark_mode',
          parent: 'Theme',
          handler: () => {
            // simple handler
            setTheme('dark')
            return { keepOpen: true }
          },
        },
      ]
    </script>
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
      img {
        content-visibility: auto;
      }
    </style>

    <script src="../js/main.js"></script>
    <script is:inline>
      // Event listener for 'astro:load' to set the body data-theme attribute
      document.addEventListener('astro:load', () => {
        let theme = localStorage.theme
        document.documentElement.dataset.theme = theme
        // document.body.setAttribute('data-theme', 'dark')
      })

      // Function to set the theme based on localStorage
      function setDarkMode(document) {
        // let theme = localStorage.theme ? 'light' : 'dark'
        let theme = localStorage.theme
        document.documentElement.dataset.theme = theme
        // console.log(theme)
      }

      // Initial theme setting
      setDarkMode(document)

      // Event listener for 'astro:before-swap' to set the theme on the incoming document
      document.addEventListener('astro:before-swap', ev => {
        setDarkMode(ev.newDocument)
      })
    </script>
    <style is:global>
      :root .astro-loading-indicator {
        @apply bg-primary shadow;
        z-index: 2000;
      }
    </style>
    <script define:vars={{ consoleDate }} data-astro-rerun>
      visited = window.sessionStorage.visited
      if (!visited) {
        sessionStorage.setItem('visited', 'true')
        const t = 'font-size: 1.25em; font-weight: bold; padding: 5px;'
        console.group('%cThanks for coming by! Wanna talk?', t),
          console.log('%cüñ•Ô∏è Github - https://github.com/bronze', t),
          console.log(
            '%cüìù LinkedIn - https://www.linkedin.com/in/carlosbronze/',
            t,
          ),
          console.log('%c‚úâÔ∏è Email - carlosbronze@gmail.com', t),
          console.log('%c Last update: ' + consoleDate, t),
          // console.log(window.sessionStorage.visited),
          console.groupEnd()
      }
    </script>
    <style>
      .a11y_heading {
        width: 1px;
        height: 1px;
        z-index: -1000;
        overflow: hidden;
        user-select: none;
        position: absolute;
        white-space: nowrap;
        clip: rect(1px, 1px, 1px, 1px);
      }
    </style>
    <!-- remember this for debugging alpine store -->
    <!-- https://github.com/alpinejs/alpine/discussions/2107 -->
    <!-- https://stackoverflow.com/questions/69290431/how-to-reuse-alpinejs-data -->
    <!-- <span x-data="$store.darkMode"></span> -->
  </body>
</html>
