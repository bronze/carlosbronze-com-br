---
export interface Props {
  title: string
}

const {title} = Astro.props as Props
import '../styles/styles.scss'
// https://github.com/littlesticks/simple-blog-astro/blob/main/src/components/SocialList.astro
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="author" content="Carlos Bronze" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Carlos Bronze" />
    <title>{title}</title>
    <meta http-equiv="X-UA-Compatible" content="chrome=1" />
    <meta name="revisit-after" content="7 days" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="msapplication-TileColor" content="#2e3440" />
    <meta name="theme-color" content="#2e3440" />
    <meta name="color-scheme" content="dark light" />
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      try {
        if (
          localStorage.theme === 'dark' ||
          (!('theme' in localStorage) &&
            window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }
      } catch (_) {}
    </script>
    <!-- <script data-domain="carlosbronze.com.br" src="/js/script.js"></script> -->
  </head>

  <body x-data="darkmode">
    <slot />
    <script>
      import Alpine from 'alpinejs'
      window.Alpine = Alpine
      Alpine.start()
    </script>
    <script>
      import '../scripts/console.js'
    </script>

    <script>
      // Alpine data
      document.addEventListener('alpine:init', () => {
        Alpine.data('darkmode', () => ({
          // Define darkmode
          dark:
            localStorage.theme === 'dark' ||
            (!('theme' in localStorage) &&
              window.matchMedia('(prefers-color-scheme: dark)').matches),

          // Toggle function
          toggleTheme() {
            if (window.localStorage.theme != 'dark') {
              document.documentElement.classList.add('dark')
              localStorage.theme = 'dark'
            } else {
              document.documentElement.classList.remove('dark')
              document.body.style.backgroundColor = ''
              window.localStorage.theme = null
            }
            this.dark = !this.dark
            // console.log('storage: ' + window.localStorage.theme + ' | dark: ' + this.dark);
          },
        }))
      })
    </script>
  </body>
</html>
