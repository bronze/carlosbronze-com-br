---
import Container from '@components/container.astro'
// @ts-ignore
import { Icon } from 'astro-icon'
---

<section>
  <Container class="relative">
    <blockquote
      class="flex cursor-auto flex-col py-[calc(4vmin+2em)] font-semibold">
      <div
        class="absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]"
        aria-hidden="true">
        <div
          class="relative left-1/2 -z-10 aspect-[1155/678] w-[36.125rem] max-w-none -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-40rem)] sm:w-[72.1875rem]"
          style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)">
        </div>
      </div>
      <p class="relative pb-4 ftext-4xl" id="quote-text">
        A goal without a plan is just a wish
      </p>
      <footer class="mt-4 block max-w-[70%] pb-12 not-italic">
        <span class="mb-1 block text-2xl" id="quote-author">
          Antoine de Saint-Exupéry
        </span>
      </footer>
    </blockquote>
  </Container>
</section>
<script>
  // import quotesData from '../pages/quotes.json' assert { type: 'json' }
  // console.log(quotesData)
  function loadQuotes() {
    fetch('/quotes.json')
      .then(response => response.json())
      .then(data => {
        const randomIndex = Math.floor(Math.random() * data.length)
        const quote = data[randomIndex].quote
        const author = data[randomIndex].author

        const quoteTextElement = document.getElementById('quote-text')
        const quoteAuthorElement = document.getElementById('quote-author')

        quoteTextElement.textContent = quote
        quoteAuthorElement.textContent = `— ${author}`
      })
      .catch(error => console.error('Error loading quotes:', error))
  }
  // Function to load a random quote and author
  // function loadRandomQuote() {
  //   const randomIndex = Math.floor(Math.random() * quotesData.length)
  //   const quote = quotesData[randomIndex].quote
  //   const author = quotesData[randomIndex].author

  //   const quoteTextElement = document.getElementById('quote-text')
  //   const quoteAuthorElement = document.getElementById('quote-author')

  //   quoteTextElement.textContent = quote
  //   quoteAuthorElement.textContent = `— ${author}`
  // }

  // Load a random quote on page load
  window.addEventListener('load', loadQuotes)
</script>

<style>
  blockquote {
    --calc: clamp(2.125rem, 1.538rem + 2.9348vw, 3.8125rem);
    margin-top: calc(var(--calc) * 3);
    margin-bottom: calc(var(--calc) * 1);
    & p {
      &::before {
        position: absolute;
        content: '';
        /* background-image: url('../assets/quotes.svg'); */
        background-size: 100% auto;
        background-repeat: no-repeat;
        width: var(--calc);
        height: calc(var(--calc) * 0.75741);
        top: calc(var(--calc) * -1);
        aspect-ratio: 200/150;
        mask: url('../icons/quotes.svg') no-repeat;
        left: 0;
        @apply bg-text;
      }
      &::after {
        position: absolute;
        content: '';
        /* background-image: url('../assets/quotes.svg'); */
        background-size: 100% auto;
        background-repeat: no-repeat;
        width: calc(var(--calc));
        height: calc(var(--calc) * 0.75741);
        bottom: calc(var(--calc) * -1);
        aspect-ratio: 200/150;
        right: 0;
        mask: url('../icons/quotes.svg') no-repeat;
        transform: rotate(180deg);
        mask-size: cover;
        @apply bg-text;
      }
    }
  }
</style>
